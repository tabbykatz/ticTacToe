{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","reportWebVitals.js","index.js"],"names":["style","background","fontSize","fontWeight","cursor","outline","Square","value","onClick","marginTop","backgroundColor","border","width","height","margin","display","gridTemplate","Board","squares","map","square","i","styles","textAlign","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","timeInHistory","slice","current","_step","move","destination","className","step","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAGMA,EAAQ,CACZC,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASIC,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACf,wBAAQR,MAAOA,EAAOQ,QAASA,EAA/B,SACGD,KCVGP,EAAQ,CACZS,UAAW,OACXC,gBAAiB,QACjBC,OAAQ,YACRC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWDC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASV,EAAZ,EAAYA,QAAZ,OACd,qBAAKR,MAAOA,EAAZ,SACGkB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBd,MAAOa,EAAQZ,QAAS,kBAAMA,EAAQa,KAAzCA,SCbbC,EAAS,CACbC,UAAW,UAoDIC,EAhDJ,WACb,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,mBAAS,QAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECbC,SAAyBhB,GAW9B,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAd,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CACrC,kBAAkBc,EAAMd,GAAxB,GAAOgB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KDJMG,CAAgBZ,EAAQE,IA+BnC,OACE,qCAEA,cAAC,EAAD,CAAOZ,QAASU,EAAQE,GAAatB,QAhCvB,SAACa,GACnB,IAAMoB,EAAgBb,EAAQc,MAAM,EAAGZ,EAAa,GAC9Ca,EAAUF,EAAcX,GACxBZ,EAAO,YAAOyB,GAEhBT,GAAUhB,EAAQG,KACtBH,EAAQG,GAAKW,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKY,GAAL,CAAoBvB,KAC9Ba,EAAcU,EAAcL,QAC5BH,GAAYD,OAwBR,sBAAKhC,MAAOsB,EAAZ,UACE,4BAAIY,EAASA,EAAS,SAAU,SAAYF,EAAU,IAAM,KAA5B,YAhBtCJ,EAAQT,KAAI,SAACyB,EAAOC,GAClB,IAAMC,EAAcD,EAAI,qBAAiBA,GAAS,kBAClD,OACE,6BACE,wBAAQE,UAAU,aAAavC,QAAS,kBAT9CuB,EADciB,EAU6CH,QAR3DZ,EAAWe,EAAO,IAAM,GAFX,IAACA,GAUR,SAA6DF,KADtDD,aEzBAI,EANH,kBACV,qCACA,uDACF,cAAC,EAAD,QCIeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.823b2506.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst style = {\n  background: '#CDCDCD',\n  fontSize: '30px',\n  fontWeight: '800',\n  cursor: 'pointer',\n  outline: 'none'\n};\n\nconst Square = ({value, onClick}) => (\n<button style={style} onClick={onClick}>\n  {value}\n</button>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n  marginTop: '50px',\n  backgroundColor: 'black',\n  border: '3px solid',\n  width: '300px',\n  height: '300px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n};\n\nconst Board = ({ squares, onClick}) => (\n<div style={style}>\n  {squares.map((square, i) => (\n      <Square key={i} value={square} onClick={() => onClick(i)} />\n  ))}\n  </div>\n  )\n\nexport default Board;\n","import React, { useState } from 'react';\nimport { calculateWinner } from '../helpers.js';\nimport Board from './Board';\n\nconst styles = {\n  textAlign: 'center',\n  // width: '200px',\n  //margin: '20px auto',\n}\nconst Game = () => {\nconst [history, setHistory] = useState([Array(9).fill(null)]);\nconst [stepNumber, setStepNumber] = useState(0);\nconst [xIsNext, setXisNext] = useState('true');\nconst winner = calculateWinner(history[stepNumber]);\n\nconst handleClick = (i) => {\n  const timeInHistory = history.slice(0, stepNumber + 1);\n  const current = timeInHistory[stepNumber];\n  const squares = [...current];\n  //when user clicks a square that is already used or game is won, return\n  if (winner || squares[i]) return;\n  squares[i] = xIsNext ? 'X' : '0';\n  setHistory([...timeInHistory, squares]);\n  setStepNumber(timeInHistory.length);\n  setXisNext(!xIsNext);\n};\n\nconst jumpTo = (step) => {\n  setStepNumber(step);\n  setXisNext(step % 2 === 0)\n};\n\nconst renderMoves = () => (\n  history.map((_step, move) => {\n    const destination = move ? `Go back by ${move}` : 'Go to beginning';\n    return (\n      <li key={move}>\n        <button className='timetravel' onClick={() => jumpTo(move)}>{destination}</button>\n      </li>\n    )\n  })\n  )\n\n\n    return (\n      <>\n\n      <Board squares={history[stepNumber]} onClick={handleClick} />\n      <div style={styles}>\n        <p>{winner ? winner + ' wins!': 'It\\'s ' + (xIsNext ? 'X' : 'O') + `'s turn`}</p>\n        {renderMoves()}\n      </div>\n    </>\n  )\n};\n\n\n  export default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n// test array\n// const squares = [\n//   null, null, null,\n//   'X', 'X', 'O',\n//   null, null, null\n// ];\n","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\n\nconst App = () => (\n  <>\n  <h1>Shall we play a game?</h1>\n<Game />\n</>\n)\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}